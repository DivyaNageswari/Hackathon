// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Client {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  role      String   @default("customer")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders    Order[]
  cartItems CartItem[]
  messages  Message[]
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  description String?
  products  Product[]
}

model Product {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  price       Float
  stock       Int       @default(0)
  imageUrl    String?
  category    Category? @relation(fields: [categoryId], references: [id])
  categoryId  Int?
  cartItems   CartItem[]
  orderItems  OrderItem[]
}

model CartItem {
  id        Int     @id @default(autoincrement())
  user      User    @relation(fields: [userId], references: [id])
  userId    Int
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int     @default(1)

  @@unique([userId, productId])
}

model Order {
  id         Int         @id @default(autoincrement())
  user       User        @relation(fields: [userId], references: [id])
  userId     Int
  totalPrice Float
  status     String      @default("pending")
  createdAt  DateTime    @default(now())
  orderItems OrderItem[]
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  order     Order   @relation(fields: [orderId], references: [id])
  orderId   Int
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int
  price     Float
}

model Message {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  message   String
  createdAt DateTime @default(now())
}
